// Copyright 2022-2025 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "common/cubemap.gsl"

localSize = 16, 16, 1;

uniform sampler2DArray skybox;

buffer restrict writeonly ShCache
{
	float4 cache[];
} sh;

void main()
{
	uint32 index = gl.globalInvocationID.z * 256 + gl.localInvocationIndex;
	const int2 skyboxSize = textureSize(skybox, 0).xy - 1;
	int2 texCoords = min(int2(gl.localInvocationID.xy), skyboxSize);
	texCoords.y = skyboxSize.y - texCoords.y;
	uint32 layer = remapCubemapFace(gl.globalInvocationID.z);
	sh.cache[index] = texelFetch(skybox, int3(texCoords, layer), 0);
}